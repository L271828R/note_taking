#!/usr/bin/env bash
#
# nlist.sh
# Enhanced to:
# 1) List .md files (with timestamps and titles)
# 2) List subfolders and count their .md files
# 3) Write to $NOTES_RESULTS_FILE
# 4) Invoke plugins
# 5) Support -delete

# resolve script dir (for finding nlist_plugins/)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)"

NOTE_DIR="$NOTES_FOLDERS_PATH"
CURRENT_FILE="$NOTES_CURRENT_FILE"
RESULTS_FILE="$NOTES_RESULTS_FILE"
PLUGIN_DIR="$SCRIPT_DIR/nlist_plugins"

# 1) ensure NOTE_DIR exists
if [[ ! -d "$NOTE_DIR" ]]; then
  echo "Error: NOTE_DIR '$NOTE_DIR' not found." >&2
  exit 1
fi

# 2) determine TARGET
current=""
if [[ -f "$CURRENT_FILE" ]]; then
  current=$(awk 'NF{gsub(/^[ \t]+|[ \t]+$/, ""); print; exit}' "$CURRENT_FILE")
fi
if [[ -n "$current" && -d "$NOTE_DIR/$current" ]]; then
  TARGET="$NOTE_DIR/$current"
else
  TARGET="$NOTE_DIR"
fi

# 3) gather .md files
mapfile -t file_list < <(
  shopt -s nullglob
  for f in "$TARGET"/*.md; do
    [[ -f "$f" ]] || continue
    echo "$(stat -f "%m" "$f")|$(basename "$f")"
  done | sort -nr
)

# 4) If -delete is passed
if [[ "$1" == "-delete" && "$2" =~ ^[0-9]+$ ]]; then
  idx=$2
  if (( idx < 1 || idx > ${#file_list[@]} )); then
    echo "Error: Invalid file number '$idx'." >&2
    exit 1
  fi
  IFS='|' read -r epoch filename <<< "${file_list[idx-1]}"
  src="$TARGET/$filename"
  if [[ ! -f "$src" ]]; then
    echo "Error: File '$src' not found." >&2
    exit 1
  fi
  delete_dir="/tmp/notes/delete"
  mkdir -p "$delete_dir"
  mv "$src" "$delete_dir"
  echo "Moved '$src' → '$delete_dir/'."
  exit 0
fi

# 5) Gather subfolders and .md file counts
mapfile -t folder_list < <(
  find "$TARGET" -mindepth 1 -maxdepth 1 -type d | sort
)

# 6) Write listing
GREEN='\033[0;32m'
BLUE='\033[1;34m'
RESET='\033[0m'

{
  echo "📄 Markdown Files"
  echo "----------------"
  for i in "${!file_list[@]}"; do
    IFS='|' read -r epoch name <<< "${file_list[i]}"
    dt=$(date -r "$epoch" "+%Y-%m-%d %H:%M:%S")
    title=$(grep -m1 '^# Title:' "$TARGET/$name" 2>/dev/null | sed 's/^# Title:[[:space:]]*//')
    if [[ -n "$title" ]]; then
      printf "%d. %s — %s %b%s%b\n" $((i+1)) "$name" "$title" "$GREEN" "$dt" "$RESET"
    else
      printf "%d. %s %b%s%b\n" $((i+1)) "$name" "$GREEN" "$dt" "$RESET"
    fi
  done

  echo ""
  echo "📁 Subfolders"
  echo "----------------"
  for folder in "${folder_list[@]}"; do
    subname=$(basename "$folder")
    count=$(find "$folder" -type f -name '*.md' 2>/dev/null | wc -l | tr -d '[:space:]')
    printf "• %b%s%b (%s files)\n" "$BLUE" "$subname" "$RESET" "$count"
  done
} > "$RESULTS_FILE"

# 7) Run plugins
if [[ -d "$PLUGIN_DIR" ]]; then
  for plugin in "$PLUGIN_DIR"/*.sh; do
    [[ -x "$plugin" ]] || continue
    "$plugin" "$RESULTS_FILE" "$TARGET"
  done
fi

# 8) Print
echo ""
echo "current > $current"
echo "---------------------------------------------------------------------------------"
cat "$RESULTS_FILE"
echo ""

